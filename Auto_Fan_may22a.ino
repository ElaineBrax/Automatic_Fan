/* 
  Sketch generated by the Arduino IoT Cloud Thing "Untitled"
  https://create.arduino.cc/cloud/things/d1ad7008-b23f-4bba-9bf1-f5343ca36b14 

  Arduino IoT Cloud Variables description

  The following variables are automatically generated and updated when changes are made to the Thing

  float thermal;
  bool fan;

  Variables which are marked as READ/WRITE in the Cloud Thing will also have functions
  which are called when their values are changed from the Dashboard.
  These functions are generated with the Thing and added at the end of this sketch.
*/

#include "thingProperties.h"
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <OneWire.h>
#include <DallasTemperature.h>

#define OLED_RESET -1
Adafruit_SSD1306 display(128, 32, &Wire, OLED_RESET);

#define ONE_WIRE_BUS 5
OneWire oneWire(ONE_WIRE_BUS);
DallasTemperature sensors(&oneWire);

int kipas=4;
int button = 17;
float temperature;
bool fanSwitch;
bool btnPressed = false;

void setup() {
  // Initialize serial and wait for port to open:
  Serial.begin(9600);
  delay(1500); 
  // Defined in thingProperties.h
  initProperties();
  // Connect to Arduino IoT Cloud
  ArduinoCloud.begin(ArduinoIoTPreferredConnection);
  
  setDebugMessageLevel(2);
  ArduinoCloud.printDebugInfo();

  pinMode(kipas, OUTPUT);
  pinMode(button, INPUT_PULLUP);
  // Start the DS18B20 sensor
  sensors.begin();

  if(!display.begin(SSD1306_SWITCHCAPVCC, 0x3C)) {
    Serial.println(F("SSD1306 allocation failed"));
    for(;;);
  }

  delay(2000);
  display.clearDisplay();
}

void loop() {
  ArduinoCloud.update();

  sensors.requestTemperatures();
  float temperature = sensors.getTempCByIndex(0);
  thermal = temperature;
  if(digitalRead(button) == 0){
    if(btnPressed == false){
      btnPressed = true;
      if(fanSwitch == false){
        fan = true;
        fanSwitch = true;
      }else{
        fan = false;
        fanSwitch = false;
      }
    }
  }else{
    btnPressed = false;
  }
  digitalWrite(kipas, HIGH);
  
  display.clearDisplay();
  display.setTextSize(1.5);
  display.setTextColor(WHITE);
  display.setCursor(0,0);
  display.print("Temp: ");
  display.print(temperature);
  display.println(" C");

  if(fanSwitch == true){
    display.print("Kipas : ON ");
    digitalWrite(kipas, LOW);
    display.display();
  }else{
    if(temperature > 36){
      display.print("Kipas : ON ");
      digitalWrite(kipas, LOW);
      display.display();
    }else{
      display.print("Kipas : OFF");
      digitalWrite(kipas, HIGH);
      display.display();
    }
  }

  float temperatureC = sensors.getTempCByIndex(0);
  Serial.print(temperatureC);
  Serial.println("ºC");

  delay(1000); // Delay a bit before next read
}



/*
  Since Fan is READ_WRITE variable, onFanChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onFanChange()  {
  fanSwitch = fan;
}

/*
  Since Thermal is READ_WRITE variable, onThermalChange() is
  executed every time a new value is received from IoT Cloud.
*/
void onThermalChange()  {
  
}